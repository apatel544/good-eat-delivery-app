{"ast":null,"code":"import firebase from \"firebase/compat/app\";\nimport 'firebase/compat/auth';\nimport { initializeApp } from \"firebase/app\";\nimport { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDuZ-LwCCSahX6j2T8QdUmq8mR4XZkqhmw\",\n  authDomain: \"goodeats-delivery.firebaseapp.com\",\n  projectId: \"goodeats-delivery\",\n  storageBucket: \"goodeats-delivery.appspot.com\",\n  messagingSenderId: \"851617425804\",\n  appId: \"1:851617425804:web:d55699e0562b2b4e1d8ea9\"\n}; // Initialize Firebase \n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nlet googleEmail = '';\nlet googleUID = '';\nlet googleDis = '';\nexport const signInWithGoogle = async () => {\n  const res = await auth.signInWithPopup(provider);\n  googleEmail = res.user.email;\n  googleUID = res.user.uid;\n  googleDis = res.user.displayName;\n\n  if (true) {\n    return;\n  }\n\n  return new Promise((resolve, reject) => {\n    console.log('EMAIL: ', googleEmail);\n    console.log('UID ', res.user.uid);\n    console.log('DISPLAY NAME ', res.user.displayName);\n    axios.post(`${API_URL}/auth/local/register`, {\n      username: googleDis,\n      email: googleEmail,\n      password: googleUID\n    }) // .post(`${API_URL}/api/google/login/`, {identifier: googleEmail, password: googleUID })\n    // .post(`${API_URL}/api/auth/google/login/`, { googleAccess })\n    .then(response => {\n      //set token response from Strapi for server validation\n      Cookie.set(\"token\", response.data.jwt); //resolve the promise to set loading to false in SignUp form\n\n      resolve(response); //redirect back to home page for restaurance selection\n\n      Router.push(\"/\");\n      console.log(\"Google Login Success\");\n    }).catch(error => {\n      //reject the promise and pass the error object back to the form\n      // reject(error);\n      console.log(\"Google Login Fail\");\n    });\n  });\n};","map":{"version":3,"sources":["/Users/ankurpatel/Desktop/Projects/2022_projects/good-eat-delivery-app/components/firebase.js"],"names":["firebase","initializeApp","useEffect","Router","Cookie","axios","API_URL","process","env","NEXT_PUBLIC_API_URL","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","googleEmail","googleUID","googleDis","signInWithGoogle","res","signInWithPopup","user","email","uid","displayName","Promise","resolve","reject","console","log","post","username","password","then","response","set","data","jwt","push","catch","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,uBAAnD;AAGA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,mCAFS;AAGrBC,EAAAA,SAAS,EAAE,mBAHU;AAIrBC,EAAAA,aAAa,EAAE,+BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACAhB,QAAQ,CAACC,aAAT,CAAuBS,cAAvB;AAEA,OAAO,MAAMO,IAAI,GAAGjB,QAAQ,CAACiB,IAAT,EAAb;AAGP,MAAMC,QAAQ,GAAG,IAAIlB,QAAQ,CAACiB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,OAAO,MAAMC,gBAAgB,GAAG,YAAY;AAExC,QAAMC,GAAG,GAAG,MAAMT,IAAI,CAACU,eAAL,CAAqBT,QAArB,CAAlB;AACAI,EAAAA,WAAW,GAAGI,GAAG,CAACE,IAAJ,CAASC,KAAvB;AACAN,EAAAA,SAAS,GAAGG,GAAG,CAACE,IAAJ,CAASE,GAArB;AACAN,EAAAA,SAAS,GAAGE,GAAG,CAACE,IAAJ,CAASG,WAArB;;AAGA,YAAmC;AACjC;AACD;;AAED,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBd,WAAvB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBV,GAAG,CAACE,IAAJ,CAASE,GAA7B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BV,GAAG,CAACE,IAAJ,CAASG,WAAtC;AACA1B,IAAAA,KAAK,CACFgC,IADH,CACS,GAAE/B,OAAQ,sBADnB,EAC0C;AAACgC,MAAAA,QAAQ,EAAEd,SAAX;AAAsBK,MAAAA,KAAK,EAAEP,WAA7B;AAA0CiB,MAAAA,QAAQ,EAAEhB;AAApD,KAD1C,EAEE;AACA;AAHF,KAIGiB,IAJH,CAISC,QAAD,IAAc;AAClB;AACArC,MAAAA,MAAM,CAACsC,GAAP,CAAW,OAAX,EAAoBD,QAAQ,CAACE,IAAT,CAAcC,GAAlC,EAFkB,CAIlB;;AACAX,MAAAA,OAAO,CAACQ,QAAD,CAAP,CALkB,CAMlB;;AACAtC,MAAAA,MAAM,CAAC0C,IAAP,CAAY,GAAZ;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,KAbH,EAcGU,KAdH,CAcUC,KAAD,IAAW;AAChB;AACA;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAlBH;AAmBD,GAvBM,CAAP;AAyBH,CArCM","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport 'firebase/compat/auth';\nimport { initializeApp } from \"firebase/app\";\nimport { useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Cookie from \"js-cookie\";\nimport axios from \"axios\";\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\";\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDuZ-LwCCSahX6j2T8QdUmq8mR4XZkqhmw\",\n  authDomain: \"goodeats-delivery.firebaseapp.com\",\n  projectId: \"goodeats-delivery\",\n  storageBucket: \"goodeats-delivery.appspot.com\",\n  messagingSenderId: \"851617425804\",\n  appId: \"1:851617425804:web:d55699e0562b2b4e1d8ea9\"\n};\n\n// Initialize Firebase \nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\n\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\n\nlet googleEmail = '';\nlet googleUID = '';\nlet googleDis = '';\nexport const signInWithGoogle = async () => {\n  \n    const res = await auth.signInWithPopup(provider)\n    googleEmail = res.user.email;\n    googleUID = res.user.uid;\n    googleDis = res.user.displayName\n    \n\n    if (typeof window === \"undefined\") {\n      return;\n    }\n  \n    return new Promise((resolve, reject) => {\n      console.log('EMAIL: ', googleEmail)\n      console.log('UID ', res.user.uid)\n      console.log('DISPLAY NAME ', res.user.displayName)\n      axios\n        .post(`${API_URL}/auth/local/register`, {username: googleDis, email: googleEmail, password: googleUID })\n        // .post(`${API_URL}/api/google/login/`, {identifier: googleEmail, password: googleUID })\n        // .post(`${API_URL}/api/auth/google/login/`, { googleAccess })\n        .then((response) => {\n          //set token response from Strapi for server validation\n          Cookie.set(\"token\", response.data.jwt);\n  \n          //resolve the promise to set loading to false in SignUp form\n          resolve(response);\n          //redirect back to home page for restaurance selection\n          Router.push(\"/\");\n          console.log(\"Google Login Success\")\n        })\n        .catch((error) => {\n          //reject the promise and pass the error object back to the form\n          // reject(error);\n          console.log(\"Google Login Fail\")\n        });\n    });\n    \n};\n"]},"metadata":{},"sourceType":"module"}