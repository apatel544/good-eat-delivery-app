{"ast":null,"code":"var _jsxFileName = \"/Users/ankurpatel/Desktop/Projects/2022_projects/delivery-capstone/good-eat-delivery-app/components/dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\nfunction Dishes({\n  restId\n}) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState();\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n  const GET_RESTAURANT_DISHES = gql`\n    query($id: ID!) {\n      restaurant(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n  const router = useRouter();\n  // console.log(`RESTAURANT = ${restId}`)\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (!restId) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }\n  }, \"Select a Restaurant\");\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"ERROR loading dishes\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  let restaurant = data.restaurant;\n  if (restaurant) {\n    return __jsx(React.Fragment, null, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, restaurant.dishes.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      style: {\n        padding: 0\n      },\n      key: res.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 150,\n        width: 150\n      },\n      src: `http://localhost:1337${res.image.url}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, res.name), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, __jsx(Button, {\n      color: \"info\",\n      outlinecolor: \"primary\",\n      onClick: () => addItem(res),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"+ Add To Cart\")))))));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 14\n      }\n    }, \" No Dishes\");\n  }\n}\nexport default Dishes;","map":{"version":3,"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","restaurantID","setRestaurantID","addItem","GET_RESTAURANTS","GET_RESTAURANT_DISHES","router","loading","error","data","variables","id","restaurant","dishes","map","res","padding","margin","height","width","image","url","name","description"],"sources":["/Users/ankurpatel/Desktop/Projects/2022_projects/delivery-capstone/good-eat-delivery-app/components/dishes.js"],"sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\n\nfunction Dishes({restId}){\n  const [restaurantID, setRestaurantID] = useState()\n  const {addItem} = useContext(AppContext)\n\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n\n  const GET_RESTAURANT_DISHES = gql`\n    query($id: ID!) {\n      restaurant(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n\n  \n  const router = useRouter();\n  // console.log(`RESTAURANT = ${restId}`)\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId },\n  });\n\n  if (!restId) return <p>Select a Restaurant</p>\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR loading dishes</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n\n    if (restaurant){\n\n      return (\n        <>\n          <Row>\n            {restaurant.dishes.map((res) => (\n              <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\n                <Card style={{ margin: \"0 10px\" }}>\n                  <CardImg\n                    top={true}\n                    style={{ height: 150, width:150 }}\n                    src={`http://localhost:1337${res.image.url}`}\n                  />\n                  <CardBody>\n                    <CardTitle>{res.name}</CardTitle>\n                    <CardText>{res.description}</CardText>\n                  </CardBody>\n                  <div className=\"card-footer\">\n                    <Button color=\"info\"\n                      outlinecolor=\"primary\"\n                      onClick = {()=> addItem(res)}\n                    >\n                      + Add To Cart\n                    </Button>\n                    \n                  </div>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n          </>\n          )}\n    else{\n      return <h1> No Dishes</h1>\n    }\n}\n\nexport default Dishes"],"mappings":"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"},"metadata":{},"sourceType":"module"}